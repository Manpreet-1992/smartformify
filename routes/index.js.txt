// index.js
const express = require('express');
const mongoose = require('mongoose');

const app = express();
const PORT = process.env.PORT || 3000;

// (Optional) DB connection — only if your service needs it
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/mydb';
mongoose.connect(MONGODB_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log('✅ Connected to MongoDB'))
.catch((err) => console.error('❌ MongoDB error:', err));

// Health check endpoint
app.get('/health', async (req, res) => {
  const health = {
    uptime: process.uptime(),
    message: 'OK',
    timestamp: Date.now(),
  };
  
  // Optionally check DB connectivity:
  if (mongoose.connection.readyState !== 1) {
    return res.status(503).json({ ...health, message: 'DB disconnected' });
  }

  try {
    res.status(200).json(health);
  } catch (error) {
    console.error('Health check error:', error);
    res.status(503).json({ ...health, message: error.message });
  }
});

// A test route to verify app is working
app.get('/', (req, res) => {
  res.send('Hello, world!');
});

app.listen(PORT, () => {
  console.log(`🚀 Server is listening on port ${PORT}`);
});
